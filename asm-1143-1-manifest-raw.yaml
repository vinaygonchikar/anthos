apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
spec:
  components:
    base:
      enabled: true
    cni:
      enabled: false
    egressGateways:
    - enabled: false
      k8s:
        env:
        - name: ISTIO_META_ROUTER_MODE
          value: standard
        hpaSpec:
          maxReplicas: 5
          metrics:
          - resource:
              name: cpu
              target:
                averageUtilization: 80
                type: Utilization
            type: Resource
          minReplicas: 2
          scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: istio-egressgateway
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        service:
          ports:
          - name: http2
            port: 80
            protocol: TCP
            targetPort: 8080
          - name: https
            port: 443
            protocol: TCP
            targetPort: 8443
          - name: tls
            port: 15443
            protocol: TCP
            targetPort: 15443
        strategy:
          rollingUpdate:
            maxSurge: 100%
            maxUnavailable: 25%
      name: istio-egressgateway
    ingressGateways:
    - enabled: false
      k8s:
        env:
        - name: ISTIO_META_ROUTER_MODE
          value: standard
        hpaSpec:
          maxReplicas: 5
          metrics:
          - resource:
              name: cpu
              target:
                averageUtilization: 80
                type: Utilization
            type: Resource
          minReplicas: 2
          scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: istio-ingressgateway
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        service:
          ports:
          - name: status-port
            port: 15021
            protocol: TCP
            targetPort: 15021
          - name: http2
            port: 80
            protocol: TCP
            targetPort: 8080
          - name: https
            port: 443
            protocol: TCP
            targetPort: 8443
          - name: tcp-istiod
            port: 15012
            protocol: TCP
            targetPort: 15012
          - name: tls
            port: 15443
            protocol: TCP
            targetPort: 15443
        strategy:
          rollingUpdate:
            maxSurge: 100%
            maxUnavailable: 25%
      name: istio-ingressgateway
    istiodRemote:
      enabled: false
    pilot:
      enabled: true
      k8s:
        env:
        - name: GKE_CLUSTER_URL
          value: https://container.googleapis.com/v1/projects/banded-lexicon-360413/locations/us-central1-c/clusters/hello-cluster
        - name: GCP_METADATA
          value: banded-lexicon-360413|334782020989|hello-cluster|us-central1-c
        - name: SPIFFE_BUNDLE_ENDPOINTS
          value: banded-lexicon-360413.svc.id.goog|https://storage.googleapis.com/mesh-ca-resources/spiffe_bundle.json
        - name: ENABLE_STACKDRIVER_MONITORING
          value: "true"
        - name: TOKEN_AUDIENCES
          value: istio-ca,banded-lexicon-360413.svc.id.goog
        - name: PILOT_ENABLE_CROSS_CLUSTER_WORKLOAD_ENTRY
          value: "true"
        hpaSpec:
          minReplicas: 2
        replicaCount: 2
        resources:
          requests:
            cpu: 500m
  hub: gcr.io/gke-release/asm
  meshConfig:
    defaultConfig:
      proxyMetadata:
        CA_PROVIDER: GoogleCA
        GCE_METADATA_HOST: metadata.google.internal
        GCP_METADATA: banded-lexicon-360413|334782020989|hello-cluster|us-central1-c
        GKE_CLUSTER_URL: https://container.googleapis.com/v1/projects/banded-lexicon-360413/locations/us-central1-c/clusters/hello-cluster
        PLUGINS: GoogleTokenExchange
        USE_TOKEN_FOR_CSR: "true"
    enablePrometheusMerge: true
    localityLbSetting:
      enabled: false
    trustDomain: banded-lexicon-360413.svc.id.goog
    trustDomainAliases:
    - banded-lexicon-360413.svc.id.goog
    - banded-lexicon-360413.hub.id.goog
  profile: empty
  tag: 1.14.3-asm.1
  values:
    base:
      enableCRDTemplates: false
      validationURL: ""
    defaultRevision: ""
    gateways:
      istio-egressgateway:
        autoscaleEnabled: true
        env: {}
        injectionTemplate: gateway
        name: istio-egressgateway
        secretVolumes:
        - mountPath: /etc/istio/egressgateway-certs
          name: egressgateway-certs
          secretName: istio-egressgateway-certs
        - mountPath: /etc/istio/egressgateway-ca-certs
          name: egressgateway-ca-certs
          secretName: istio-egressgateway-ca-certs
        type: ClusterIP
      istio-ingressgateway:
        autoscaleEnabled: true
        env: {}
        injectionTemplate: gateway
        name: istio-ingressgateway
        secretVolumes:
        - mountPath: /etc/istio/ingressgateway-certs
          name: ingressgateway-certs
          secretName: istio-ingressgateway-certs
        - mountPath: /etc/istio/ingressgateway-ca-certs
          name: ingressgateway-ca-certs
          secretName: istio-ingressgateway-ca-certs
        type: LoadBalancer
    global:
      caAddress: meshca.googleapis.com:443
      configValidation: true
      defaultNodeSelector: {}
      defaultPodDisruptionBudget:
        enabled: true
      defaultResources:
        requests:
          cpu: 10m
      imagePullPolicy: ""
      imagePullSecrets: []
      istioNamespace: istio-system
      istiod:
        enableAnalysis: false
      jwtPolicy: third-party-jwt
      logAsJson: false
      logging:
        level: default:info
      meshID: proj-334782020989
      meshNetworks: {}
      mountMtlsCerts: false
      multiCluster:
        clusterName: cn-banded-lexicon-360413-us-central1-c-hello-cluster
        enabled: false
      network: banded-lexicon-360413-default
      omitSidecarInjectorConfigMap: false
      oneNamespace: false
      operatorManageWebhooks: false
      pilotCertProvider: kubernetes
      priorityClassName: ""
      proxy:
        autoInject: enabled
        clusterDomain: cluster.local
        componentLogLevel: misc:error
        enableCoreDump: false
        excludeIPRanges: ""
        excludeInboundPorts: ""
        excludeOutboundPorts: ""
        image: proxyv2
        includeIPRanges: '*'
        logLevel: warning
        privileged: false
        readinessFailureThreshold: 30
        readinessInitialDelaySeconds: 1
        readinessPeriodSeconds: 2
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        statusPort: 15020
        tracer: zipkin
      proxy_init:
        image: proxyv2
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 10m
            memory: 10Mi
      sds:
        token:
          aud: banded-lexicon-360413.svc.id.goog
      sts:
        servicePort: 15463
      tracer:
        datadog: {}
        lightstep: {}
        stackdriver: {}
        zipkin: {}
      useMCP: false
    istiodRemote:
      injectionURL: ""
    mdp:
      enabled: false
    pilot:
      autoscaleEnabled: true
      autoscaleMax: 5
      autoscaleMin: 1
      configMap: true
      cpu:
        targetAverageUtilization: 80
      enableProtocolSniffingForInbound: true
      enableProtocolSniffingForOutbound: true
      env: {}
      image: pilot
      keepaliveMaxServerConnectionAge: 30m
      nodeSelector: {}
      podLabels: {}
      replicaCount: 1
      traceSampling: 1
    sidecarInjectorWebhook:
      rewriteAppHTTPProbe: true
    telemetry:
      enabled: true
      v2:
        enabled: true
        metadataExchange:
          wasmEnabled: false
        prometheus:
          enabled: false
          wasmEnabled: false
        stackdriver:
          configOverride: {}
          enabled: true
          inboundAccessLogging: FULL
          logging: false
          monitoring: false
          outboundAccessLogging: ERRORS_ONLY
          topology: true

